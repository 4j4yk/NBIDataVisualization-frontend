import DRFSerializer from './drf';
import DS from 'ember-data';

export default DRFSerializer.extend(DS.EmbeddedRecordsMixin, {
    attrs: {
        stateCode: 'stateCode',
        structureNumber: 'structureNumber',
        inventoryRoute: ('inventoryRoute'),
        highwayAgencyDistrict: 'highwayAgencyDistrict',
        countyCode: 'countyCode',
        placeCode: 'placeCode',
        featuresIntersected: 'featuresIntersected',
        facilityCarriedByStructure: 'facilityCarriedByStructure',
        InventoryRTeMinVertClearance: 'InventoryRTeMinVertClearance',
        baseHighwayPoint: 'baseHighwayPoint',
        inventoryRouteSubrouteNumber: 'inventoryRouteSubrouteNumber',
        bypassDetourLength: 'bypassDetourLength',
        maintenanceReponsibility: 'maintenanceReponsibility',
        functionalClassOfInventoryRte: 'functionalClassOfInventoryRte',
        yearBuilt: 'yearBuilt',
        lanesOnUnderStructure: ('lanesOnUnderStructure'),
        averageDailyTraffi: ('averageDailyTraffi'),
        yearOfAverageDailyTraffic: ('yearOfAverageDailyTraffic'),
        designLoad: ('designLoad'),
        approachRoadwayWidth: ('approachRoadwayWidth'),
        bridgeMedian: ('bridgeMedian'),
        structureFlared: ('structureFlared'),
        trafficSafetyFeatures: ('trafficSafetyFeatures'),
        historicalSignificance: ('historicalSignificance'),
        navigationControl: ('navigationControl'),
        navigationVeriticalClearance: ('navigationVeriticalClearance'),
        navigationHorizontalClearance: DS.attr('navigationHorizontalClearance'),
        strucutreOpenPostedClosed: ('strucutreOpenPostedClosed'),
        typeOfService: ('typeOfService'),
        structureTypeMain: ('structureTypeMain'),
        structureTypeApproachSpans: ('structureTypeApproachSpans'),
        numberOfSpansInMainUnit: ('numberOfSpansInMainUnit'),
        numberOfApproachSpans: ('numberOfApproachSpans'),
        InventoryRteTotalHorzClearance: ('InventoryRteTotalHorzClearance'),
        lengthOfMaximumSpan: ('lengthOfMaximumSpan'),
        structureLength: ('structureLength'),
        curbSidewalkWidth: ('curbSidewalkWidth'),
        bridgeRoadwayWithCurbToCurb: ('bridgeRoadwayWithCurbToCurb'),
        deckWidthOutToOut: ('deckWidthOutToOut'),
        minVertClearOverBridgeRoadway: ('minVertClearOverBridgeRoadway'),
        minimumVeriticalUnderclearance: ('minimumVeriticalUnderclearance'),
        minLateralUnderclearOnRight: ('minLateralUnderclearOnRight'),
        minLateralUnderclearOnLeft: ('minLateralUnderclearOnLeft'),
        channelChannelProtection: ('channelChannelProtection'),
        methodUsedToDetermineOperatingRatin: ('methodUsedToDetermineOperatingRatin'),
        operatingRating: ('operatingRating'),
        methodUsedToDetermineInventoryRating: ('methodUsedToDetermineInventoryRating'),
        inventoryRating: ('inventoryRating'),
        structuralEvaluation: ('structuralEvaluation'),
        deckGeometry: ('deckGeometry'),
        underclearVerticalHorizontal: ('underclearVerticalHorizontal'),
        bridgePosting: ('bridgePosting'),
        waterwayAdequacy: ('waterwayAdequacy'),
        approachRoadwayAlignment: ('approachRoadwayAlignment'),
        typeOfWork: ('typeOfWork'),
        lengthOfStructureImprovement: ('lengthOfStructureImprovement'),
        inspectionDate: ('inspectionDate'),
        designatedInspectionFrequency: ('designatedInspectionFrequency'),
        criticalFeatureInspection: ('criticalFeatureInspection'),
        criticalFeatureInspectionDates: ('criticalFeatureInspectionDates'),
        bridgeImprovementCost: ('bridgeImprovementCost'),
        roadwayImprovementCost: ('roadwayImprovementCost'),
        totalProjectCost: ('totalProjectCost'),
        yearOfImprovementCost: ('yearOfImprovementCost'),
        borderBridge: ('borderBridge'),
        borderBridgeStructureNumber: ('borderBridgeStructureNumber'),
        STRAHNETHighwayDesignation: ('STRAHNETHighwayDesignation'),
        parallelStructureDesignation: ('parallelStructureDesignation'),
        directionOfTraffic: ('directionOfTraffic'),
        temporaryStructureDesignation: ('temporaryStructureDesignation'),
        highwaySystemOfInventoryRoute: ('highwaySystemOfInventoryRoute'),
        federalLandsHighways: ('federalLandsHighways'),
        yearReconstructed: ('yearReconstructed'),
        deckStructureType: ('deckStructureType'),
        wearingSurface: ('wearingSurface'),
        avgDailyTruckTraffic: ('avgDailyTruckTraffic'),
        designatedNationalNetwork: ('designatedNationalNetwork'),
        nbisBridgeLength: ('nbisBridgeLength'),
        scourCriticalBridges: ('scourCriticalBridges'),
        futureAvgDailyTraffic: ('futureAvgDailyTraffic'),
        yearOfFutureAvgDailyTraffic: ('yearOfFutureAvgDailyTraffic'),
        minimumNavigationVerticalClearanceVerticalLiftBridge: ('minimumNavigationVerticalClearanceVerticalLiftBridge'),
        federalAgencyIndicator: ('federalAgencyIndicator'),
        dateLastUpdate: ('dateLastUpdate'),
        typeLastUpdate: ('typeLastUpdate'),
        deductCode: ('deductCode'),
        statuswith10yearrule: ('statuswith10yearrule'),
        sufficiencyRatingAsteriskField: ('sufficiencyRatingAsteriskField'),
        sufficiencyRating: ('sufficiencyRating') 
      }
});
